---
import { SIDEBAR } from "../consts";
type Props = {
	currentPage: string;
	title: string
};
const { currentPage, title } = Astro.props;
const currentPageMatch = currentPage.endsWith("/")
	? currentPage.slice(1, -1)
	: currentPage.slice(1);
const dropdownContents = SIDEBAR;
---

<div class="relative md:hidden inline-block text-left mb-12"  x-data="{ tocOpen: false}">
	<p class="text-base font-semibold text-gray-900 mb-2">Documentation Menu</p>
	<div>
		<button
			type="button"
			class="inline-flex w-56 justify-between gap-x-1.5 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
			x-on:click="tocOpen = true"
		>
			{title}
			<svg
				class="-mr-1 h-5 w-5 text-gray-400"
				viewBox="0 0 20 20"
				fill="currentColor"
				aria-hidden="true"
			>
				<path
					fill-rule="evenodd"
					d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
					clip-rule="evenodd"></path>
			</svg>
		</button>
	</div>
	<div
		class="absolute left-0 z-10 mt-2 w-56 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
		role="menu"
		aria-orientation="vertical"
		aria-labelledby="menu-button"
		tabindex="-1"
		x-cloak
		x-on:click.outside="tocOpen = false"
		x-show="tocOpen"
	>
		<div class="py-1" role="none">
			
			{
				Object.entries(dropdownContents).map(([header, children]) =>
					children.map((child) => {
						const url = child.link;
						let fonts = "";
						if ("docs/" + url == currentPageMatch) {
							fonts = "font-bold";
						}
						return (
							<a
							href={'/docs/'+url}
								class={'text-gray-700 hover:text-gray-800 hover:bg-gray-50 block px-4 py-2 text-sm ' + fonts}
								role="menuitem"
								tabindex="-1"
								id="menu-item-0"
							>
							{child.text}
							</a>
						);
					})
				)
			}
		</div>
	</div>
</div>
<!-- <button
	x-on:mouseover="tocOpen = true"
	type="button"
	class="md:hidden px-4 py-2 border shadow mb-6 w-90"
	x-data="{ tocOpen: false}"
>
	{currentPageMatch}
	<svg
		xmlns="http://www.w3.org/2000/svg"
		class="w-3 h-3 ml-2"
		fill="none"
		viewBox="0 0 24 24"
		stroke-width="1.5"
		stroke="currentColor"
	>
		<path
			stroke-linecap="round"
			stroke-linejoin="round"
			d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
	</svg>
	<div
		class="absolute top-8 -right-8 sm:right-0 rounded shadow border bg-white w-90 text-left"
		x-cloak
		x-on:click.outside="tocOpen = false"
		x-show="tocOpen"
	>
		<ul class="w-full list-none py-2">
			{
				Object.entries(dropdownContents).map(([header, children]) =>
					children.map((child) => {
						const url = child.link;
						let fonts = "";
						if ("docs/" + url == currentPageMatch) {
							fonts = "font-bold bg-gray-100 rounded";
						} else {
							fonts = "font-light rounded";
						}
						return (
							<li>
								<a class={fonts} href={"/docs/" + url}>
									{child.text}
								</a>
							</li>
						);
					})
				)
			}
		</ul>
	</div>
</button> -->
